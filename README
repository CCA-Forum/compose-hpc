Term representation generator for C/C++ files + unparser
version 0.5 (not suitable for production use)

IMPORTANT:
This software is provided as is, with no warranty of any kind.
The entire risk of using the program is with the user.

I  -- Creating the term representation
To create a first order term representing a C/C++ program call
EITHER
generatePrologTerm input
to read the C/C++ file input and write the output to stdout
OR
c2term input output
to read teh C/C++ file input and write the output to file output.
If output exists previously, it is overwritten

II -- Transforming the term representation back to source code
To create source code from the term representation
EITHER pipe a term representation followed by EOF to
termparser
OR
call
term2c prologfile newsourcefile
to read the term representation from prologfile and write the
created source code 

III-- Inspecting a term representation
As terms get pretty large (about 40 times the size of the source program),
they are useless to the human reader in their pure form. An experimental
prettyprinter called 'termpretty' is provided. It does indentation and adds 
vertical lines consisting of ':' symbols. It reads from stdin and writes 
to stdout.

IV -- An example transformation
in the folder prolog/ there is a PROLOG file called
transformer.pl

When the program is consulted and the predicate testrun/0 is called,
the program reads a term from input.pl and writes the transformed term
to output.pl It consists of some rewriting infrastructure and two
example transformations.  (tested with SWI-PROLOG)

A good test file is: tests/test_transformme.C

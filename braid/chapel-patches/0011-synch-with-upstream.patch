From 0546e4a66b53a4345a94815dc2293058bcf1dd27 Mon Sep 17 00:00:00 2001
From: Adrian Prantl <adrian@llnl.gov>
Date: Tue, 29 Jan 2013 15:23:19 -0800
Subject: [PATCH 11/11] synch with upstream

---
 compiler/passes/codegen.cpp             |    9 +--------
 compiler/resolution/callDestructors.cpp |    2 --
 runtime/include/chplrt.h                |    2 +-
 runtime/src/chplinit.c                  |    4 ++--
 4 files changed, 4 insertions(+), 13 deletions(-)

diff --git a/compiler/passes/codegen.cpp b/compiler/passes/codegen.cpp
index 032c28a..c7b321c 100644
--- a/compiler/passes/codegen.cpp
+++ b/compiler/passes/codegen.cpp
@@ -107,14 +107,7 @@ static void legalizeName(Symbol* sym) {
   }
 
   // Add chpl_ to operator names.
-  // hilde sez:  This is very kludgy.  What do we really mean?
-  if ((!strncmp("chpl_", sym->cname, 5) && 
-       (strcmp("chpl_gen_main", sym->cname) &&
-	strcmp("chpl_gen_init", sym->cname) &&
-	strcmp("chpl_gen_shutdown", sym->cname) &&
-	strcmp("chpl_user_main", sym->cname)) 
-       && sym->cname[5] != '_') ||
-      (sym->cname[0] == '_' && (sym->cname[1] == '_' || (sym->cname[1] >= 'A' && sym->cname[1] <= 'Z')))) {
+  if (sym->cname[0] == '_' && (sym->cname[1] == '_' || (sym->cname[1] >= 'A' && sym->cname[1] <= 'Z'))) {
     sym->cname = astr("chpl__", sym->cname);
   }
 }
diff --git a/compiler/resolution/callDestructors.cpp b/compiler/resolution/callDestructors.cpp
index 18d8f86..e112d78 100644
--- a/compiler/resolution/callDestructors.cpp
+++ b/compiler/resolution/callDestructors.cpp
@@ -347,8 +347,6 @@ static void insertGlobalAutoDestroyCalls() {
   if( ! fNoInternalModules ) {
     chpl_gen_main->defPoint->insertBefore(new DefExpr(fn));
     chpl_gen_main->insertBeforeReturnAfterLabel(new CallExpr(fn));
-    chpl_gen_shutdown->defPoint->insertBefore(new DefExpr(fn));
-    chpl_gen_shutdown->insertBeforeReturnAfterLabel(new CallExpr(fn));
   }
   forv_Vec(DefExpr, def, gDefExprs) {
     if (isModuleSymbol(def->parentSymbol))
diff --git a/runtime/include/chplrt.h b/runtime/include/chplrt.h
index f832692..24cfaed 100644
--- a/runtime/include/chplrt.h
+++ b/runtime/include/chplrt.h
@@ -38,7 +38,7 @@ extern int chpl_threads_initialized;
       chpl_error("attempt to dereference nil", lineno, filename);	\
   } while (0)
 
-#define _REF_BORROW(x, type, fieldname,data, lineno, filename)		\
+#define _REF_BORROW(x, type, data, lineno, filename)			\
   do {									\
     if (data == nil)							\
       chpl_error("data vector is nil", lineno, filename);		\
diff --git a/runtime/src/chplinit.c b/runtime/src/chplinit.c
index 1b8d0ce..af74c45 100644
--- a/runtime/src/chplinit.c
+++ b/runtime/src/chplinit.c
@@ -39,7 +39,7 @@ void printAdditionalHelp(void) {
 }
 
 
-static void recordExecutionCommand(int argc, char *argv[]) {
+void recordExecutionCommand(int argc, char *argv[]) {
   int i, length = 0;
   for (i = 0; i < argc; i++) {
     length += strlen(argv[i]) + 1;
@@ -230,4 +230,4 @@ int chpl_init_library(int argc, char* argv[]) {
   }
 
   return chpl_localeID;
-}
\ No newline at end of file
+}
-- 
1.7.0.4


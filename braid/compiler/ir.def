% -*- prolog -*-
%# Pipe this into GRAMOLA
%# Lines starting with %% will be presereved.
%# 
%# 
%%#!/usr/bin/env python
%%# -*- python -*-
%%## @package ir
%%# Convenience definitions for intermediate representation (IR) nodes.
%%#
%%# Please report bugs to <adrian@llnl.gov>.
%%#
%%# \authors <pre>
%%#
%%# Copyright (c) 2011, Lawrence Livermore National Security, LLC.
%%# Produced at the Lawrence Livermore National Laboratory
%%# Written by Adrian Prantl <adrian@llnl.gov>.
%%#  
%%# LLNL-CODE-473891.
%%# All rights reserved.
%%#  
%%# This file is part of BRAID. For details, see 
%%# http://compose-hpc.sourceforge.net/. 
%%# Please read the COPYRIGHT file for Our Notice and
%%# for the BSD License.
%%#
%%# </pre>

%# IR Grammar definition
[ %# Do not forget to add parentheses around ( A|B )!
 Stmt = stmt(Expr),
 Expr = (plus(Expr, Expr) | call(Expr, [Expr])),
 Fn_decl = fn_decl(Type_, Method_name, [Arg]),
 Fn_defn = fn_defn(Type_, Method_name, [Arg], [Stmt]),
 Arg = arg([Attr], Mode, Type_, Name),
 Attr = [],
 Mode = (in_ | out | inout),
 Type_ = (primitive_type(void | int) | User_type),
 User_type = [],
 Method_name = method_name(string, string),
 Name = identifier(string)
].

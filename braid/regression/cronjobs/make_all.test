# make_all.sh -*- sh -*-
#
# OVERVIEW:
#     This script tests the SVN repository and packaging
#     of the Babel code.  It is intended to be run only
#     on the "official" development platforms.  This script
#     will only do ./configure, make all.
#
# REQUIREMENTS:
#     This script assumes several environment variables are
#     set appropriately.  It is normal usage for the envoker of
#     this script to source some other platform specific 
#     configuration file and then envoke this script.
#
#     SHp
#     PACKAGE
#     SNAPSHOT_NUMBER
#     PATH
#     LD_LIBRARY_PATH (or equivalent)
#     CLASSPATH
#     SVN
#     SVNROOT
#     MAKE
#     MAKE_FLAGS
#     MAIL
#     PERL
#     ACLOCAL
#     AUTOMAKE
#     AUTOCONF
#     CONFIG_FLAGS
#     CD
#     MKDIR
#     CC
#     CFLAGS
#     CXX
#     CXXFLAGS
#     F77
#     FFLAGS
#     CHGRP
#     TESTGID
#     CHMOD
#     MV

BUILDDIR=${PACKAGING_BUILDDIR}/cronjobs/${PROFILE_NAME}/${SESSION}
if test ! -d ${BUILDDIR}; then 
   mkdir -p ${BUILDDIR};
fi 
cd ${BUILDDIR}

umask 007

date
echo "Host: " `hostname`
gcc --version
echo "************ rm -rf $PACKAGE ************"
$CHGRP -f ${TESTGID} .
$CHMOD -f ug+rwx .
if test -d $PACKAGE; then
  $CHGRP -Rf ${TESTGID} $PACKAGE
  $CHMOD -Rf ug+rwX $PACKAGE
  olddir=$PACKAGE.old
  if test -d $olddir; then
    $CHGRP -Rf ${TESTGID} $olddir ; $CHMOD -Rf ug+rwX $olddir; rm -rf $olddir
      if test -d $olddir; then
	for in in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ; do
	  if test -d $olddir.$i; then
	    $CHGRP -Rf ${TESTGID} $olddir.$i ; $CHMOD -Rf ug+rwX $olddir.$i; rm -rf $olddir.$i
	  else
	    olddir=$olddir.$i
	    break
	  fi
	done
      fi
    fi
  $MV -f $PACKAGE $olddir
  rm -rf $olddir
  unset olddir
fi

echo "************ ENVIRONMENT VARIABLES ************"
source ${HOME}/bin/babel-cvs-`hostname -s`.settings 
# sets SSH_AUTH_SOCK & SSH_AGENT_PID
echo `set`


echo "************ $GIT clone $PACKAGE ************"
rm -rf compose-hpc
$GIT clone $COMPOSE_REPO
if test $? -ne 0; then 
	echo '****** GIT clone failed ******'
	exit 1
fi
$CHGRP -Rf ${TESTGID} $PACKAGE

echo "************ change version # to snapshot #  ************"
$CD compose-hpc/$PACKAGE
$PERL -p -i -e "s/AC_INIT.*/AC_INIT($PACKAGE, $SNAPSHOT_NUMBER, babel-bugs\@cca-forum.org)/;" configure.ac

echo "************ rebuild supporting files  ************"
./autotool_rebuild.sh
if test $? -ne 0; then
	echo '****** autotools_rebuild.sh failed  ******'
	exit 1
fi

echo "************ configure  ************"
./configure -C --prefix=${PWD}/_inst ${CONFIG_FLAGS}
if test $? -ne 0; then 
	  echo '****** configure failed ******'
	  exit 1
fi

echo "************ $MAKE $MAKE_FLAGS all ************"
$MAKE $MAKE_FLAGS all
if test $? -ne 0; then 
	  echo "****** $MAKE $MAKE_FLAGS all failed ******"
	  exit 1
fi 

shortdate=`date +"%Y-%m-%d"`
longdate=`date +"%a, %d %b %Y"`
ttime=`date +"%k:%M:%S"`
cat > ${XML_ARCHIVE} <<EOF
<gantlet version="0.9.0">
    <head>
        <attribute key="package" value="${PACKAGE}"/>
        <attribute key="profile" value="${PROFILE_NAME}"/>
        <attribute key="session" value="${SESSION}"/>
        <attribute key="date" value="${shortdate}"/>
        <attribute key="date_text" value="${longdate}"/>
        <attribute key="time" value="${ttime}"/>
        <attribute key="whoami" value="unknown"/>
        <attribute key="hostname" value="${HOSTNAME}"/>
        <attribute key="elapsedtime" value="1"/>
        <attribute key="total_tests" value="1"/>
        <attribute key="passed_tests" value="1"/>
        <attribute key="xfailed_tests" value="0"/>
        <attribute key="failed_tests" value="0"/>
        <attribute key="broken_tests" value="0"/>
        <attribute key="total_parts" value="1"/>
        <attribute key="passed_parts" value="1"/>
        <attribute key="xfailed_parts" value="0"/>
        <attribute key="failed_parts" value="0"/>
    </head>
    <body>
        <test number="1" name="unknown" result="PASS" type="text" nparts="1">
            <part number="1" result="PASS">
                <comment>This is a bogus XML generated by make_all.test</comment>
            </part>
        </test>
    </body>
</gantlet>
EOF

echo "************ Successful run $MAKE $MAKE_FLAGS clean ************"
cd ${BUILDDIR} && $CD compose-hpc/$PACKAGE && $MAKE $MAKE_FLAGS clean

exit 0

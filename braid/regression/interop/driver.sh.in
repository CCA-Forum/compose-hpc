#!/bin/sh
echo "Running Braid -> Babel tests."
echo "Expecting Babel sources in @BABEL_SRCDIR@"

if [ $# -lt 3 ]; then 
    echo "usage: $0 make [flags] -- {test}.babel"
    exit 1
fi

# Argument layout:
# $1..N-1 .... make makeflags
# $N ......... file
end=
MAKE="$1"
while [ -n "$1" ] ; do
  last=$1
  shift
  if [ "$1" = "--" ]; then
      end="true" # stop copying after the -- argument
  fi
  if [ -z "$end" ]; then
      MAKE="$MAKE $1"
  fi
done

# End of argument handling

echo "MAKE = $MAKE"
echo "file = $last"
#set -x
echo "--set up environment"
name=`basename $last test.chpl`
BABEL=@BABEL_PREFIX@/bin/babel
braid="env PYTHONPATH=../../../../braid:../../../../braid/.libs:../../@top_srcdir@/contrib/argparse-1.1:../../@top_srcdir@/contrib/ply:@PYTHONPATH@ @PYTHON@ ../../@top_srcdir@/braid/braid.py"
sidl=@BABEL_SRCDIR@/regression/$name/$name.sidl
cd regression/interop                                   ||exit 1

echo "--setup directory, copy over babel regression test"
mkdir -p $name
cd $name                                                ||exit 1
cp -u -r \
   ../@srcdir@/$name/runChapel \
   @BABEL_SRCDIR@/regression/$name/libC .		||exit 1
chmod u+w -R runChapel libC                             ||exit 1
echo "--generate server"
cd libC							||exit 1
$BABEL $sidl -sc --makefile				||exit 1
echo "--turn on debugging"
perl -pi -e"s/(EXTRAFLAGS=)/\1-ggdb -O0/" GNUmakefile	||exit 1
$MAKE							||exit 1
cd ..							||exit 1
echo "--generate client"
cd runChapel						||exit 1
$braid $sidl -cchapel --makefile			||exit 1
$braid ../../output/output.sidl -cchapel                ||exit 1
cat >>babel.make <<EOF
IORHDRS += RegOut_IOR.h
STUBHDRS += RegOut.h
STUBSRCS += RegOut_cStub.c 
EOF
$MAKE SERVER="../libC/libimpl.la ../../output/libC/libimpl.la" \
      IMPL="${name}test"                        	||exit 1
echo "--run client"
exec ./runChapel


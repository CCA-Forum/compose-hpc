#!/bin/sh
echo "Compiling client tests."
echo "Expecting Babel sources in @BABEL_SRCDIR@"

if [ $# -lt 2 ]; then 
    echo "usage: $0 testcase make [flags]"
    exit 1
fi

arg=$1
shift
MAKE=$1
shift
if echo "$1" | grep -q '^-'; then
    MAKE="$MAKE $*"
else
    MAKE="$MAKE -$*"
fi
TESTCASE=`basename \`dirname \\\`dirname $arg\\\`\``
language=`echo \`basename \\\`dirname $arg\\\`\` |sed 's/run//g'`
sidl=@BABEL_SRCDIR@/regression/$TESTCASE/$TESTCASE.sidl


# Begin of main driver
echo "MAKE = $MAKE"
echo "TESTCASE = $TESTCASE"
#set -x
echo "--set up environment"
BRAID="env PYTHONPATH=../../../../braid:../../../../braid/.libs:../../@top_srcdir@/contrib/argparse-1.1:../../@top_srcdir@/contrib/ply:@PYTHONPATH@ @PYTHON@ ../../@top_srcdir@/braid/braid.py"
sidl=@BABEL_SRCDIR@/regression/$TESTCASE/$TESTCASE.sidl
cd regression/interop                                   ||exit 1


echo "--setup directory, copy over babel regression test"
mkdir -p $TESTCASE
cd $TESTCASE                                            ||exit 1
case $language in
    Chapel)
	cp -r ../@srcdir@/$TESTCASE/run${language} .    ||exit 1
	;;
    *)	cp -r @BABEL_SRCDIR@/regression/$TESTCASE/run${language} . ||exit 1
	;;
esac
chmod -R u+w run${language}                             ||exit 1


echo "--generate client"
cd run${language}					||exit 1
$BRAID $sidl ../../output/output.sidl -c${language} --makefile ||exit 1

echo "--customizing babel-generated makefiles"
@PERL@ -pi -e 's/(all : lib..LIBNAME..la ..SCLFILE.)$/\1 \$(TARGET)
\$(TARGET): lib\$(LIBNAME).la \$(SERVER) \$(IMPLOBJS) \$(IMPL).lo 
	babel-libtool --mode=link \$(CC) -static lib\$(LIBNAME).la \\
	  \$(IMPLOBJS) \$(IMPL).lo \$(SERVER) \$(CHPL_LDFLAGS) \$(EXTRA_LDFLAGS) -o \$@
/' GNUmakefile

# Compile
for libdir in `ls -1 -d ../lib*`; do
  server=`echo $libdir|sed 's/^...lib//g'`
  case $server in
      F*) extralib="-lgfortran" ;;
      *)  extralib= ;;
  esac
  echo "--compiling client [ $language -> $server ]"
  $MAKE SERVER="${libdir}/libimpl*.la ../../output/libC/libimpl.la" \
        IMPL="${TESTCASE}test" \
        EXTRA_LDFLAGS="$extralib" \
        TARGET="run${language}2${server}"              ||exit 1

  # generate wrapper scripts
  case "$server" in
      Java)
	  cat >run${language}2Java.sh <<EOF
# To debug, run as ./run${language}2${server}.sh gdbtui
env LD_LIBRARY_PATH="${libjvm_dir}:${libjava_dir}:@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}:$libdir" \
    CLASSPATH="../libJava:@BABEL_PREFIX@/lib/sidl-@BABEL_VERSION@.jar:@BABEL_PREFIX@/lib/sidlstub_@BABEL_VERSION@.jar:.:$libdir" \
    SIDL_DLL_PATH="../libJava/libimpl.scl;@BABEL_PREFIX@/lib/libsidlstub_java.scl;@BABEL_PREFIX@/lib/libsidl.scl;../../../runtime/sidlx/libsidlx.scl;../../output/libC/libimpl.scl" \
      \$1 ./run${language}2${server} 
EOF
	  ;;
      Python)
	  cat >run${language}2Python.sh <<EOF
# To debug, run as ./run${language}2${server}.sh gdbtui
env LD_LIBRARY_PATH="@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}" \
    PYTHONPATH="../libPython:`@PYTHON@ -c "from distutils.sysconfig import get_python_lib; print get_python_lib(prefix='@prefix@',plat_specific=1) + ':' + get_python_lib(prefix='@prefix@')"`:`@PYTHON@ -c "from distutils.sysconfig import get_python_lib; print get_python_lib(prefix='@BABEL_PREFIX@',plat_specific=1) + ':' + get_python_lib(prefix='@BABEL_PREFIX@')"`$PYTHONPATH" \
    SIDL_DLL_PATH="../libPython/libimpl.scl;../../output/libC/libimpl.scl;@BABEL_PREFIX@/lib/libsidlx.scl" \
    \$1 ./run${language}2${server}
EOF
	  ;;
      *)
	  cat >run${language}2${server}.sh <<EOF
# To debug, run as ./run${language}2${server}.sh gdbtui
env LD_LIBRARY_PATH="@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}" \
    SIDL_DLL_PATH="$libdir/libimpl.scl;../../output/libC/libimpl.scl;@BABEL_PREFIX@/lib/libsidlx.scl" \
    \$1 ./run${language}2${server}
EOF
	  ;;
  esac
  chmod u+x run${language}2${server}.sh
done


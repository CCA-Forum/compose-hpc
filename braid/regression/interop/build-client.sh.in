#!/bin/sh
echo "Compiling Braid -> Babel tests."
echo "Expecting Babel sources in @BABEL_SRCDIR@"

if [ $# -lt 3 ]; then 
    echo "usage: $0 make [flags] -- {test}.babel"
    exit 1
fi

arg=$1
shift
MAKE=$1
shift
if echo "$1" | grep -q '^-'; then
    MAKE="$MAKE $*"
else
    MAKE="$MAKE -$*"
fi
TESTCASE=`basename \`dirname \\\`dirname $arg\\\`\``

# Begin of main driver
echo "MAKE = $MAKE"
echo "TESTCASE = $TESTCASE"
#set -x
echo "--set up environment"
BABEL=@BABEL_PREFIX@/bin/babel
BRAID="env PYTHONPATH=../../../../braid:../../../../braid/.libs:../../@top_srcdir@/contrib/argparse-1.1:../../@top_srcdir@/contrib/ply:@PYTHONPATH@ @PYTHON@ ../../@top_srcdir@/braid/braid.py"
sidl=@BABEL_SRCDIR@/regression/$TESTCASE/$TESTCASE.sidl
cd regression/interop                                   ||exit 1

echo "--setup directory, copy over babel regression test"
mkdir -p $TESTCASE
cd $TESTCASE                                            ||exit 1
cp -u -r \
    ../@srcdir@/$TESTCASE/runChapel .                   ||exit 1
chmod u+w -R runChapel                                  ||exit 1

echo "--generate client"
cd runChapel						||exit 1
$BRAID $sidl -cchapel --makefile			||exit 1
$BRAID ../../output/output.sidl -cchapel                ||exit 1
cat >>babel.make <<EOF
IORHDRS += RegOut_IOR.h
STUBHDRS += RegOut.h
STUBSRCS += RegOut_cStub.c 
EOF
for libdir in `ls -1 -d ../lib*`; do
  language=`echo $libdir|sed 's/^...lib//g'`
  case $language in
      F*) extralib="-lgfortran" ;;
      *)  extralib= ;;
  esac
  echo "--compiling client [ $language ]"
  $MAKE SERVER="${libdir}/libimpl*.la ../../output/libC/libimpl.la" \
        IMPL="${TESTCASE}test" \
        EXTRA_LDFLAGS="$extralib" \
        OUTFILE="runChapel2$language"                   ||exit 1

  # generate wrapper scripts
  case "$language" in
      Java)
	  cat >runChapel2Java.sh <<EOF
env LD_LIBRARY_PATH="${libjvm_dir}:${libjava_dir}:@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}:$libdir" \
    CLASSPATH="../libJava:@BABEL_PREFIX@/lib/sidl-@BABEL_VERSION@.jar:@BABEL_PREFIX@/lib/sidlstub_@BABEL_VERSION@.jar:.:$libdir" \
    SIDL_DLL_PATH="../libJava/libimpl.scl;@BABEL_PREFIX@/lib/libsidlstub_java.scl;@BABEL_PREFIX@/lib/libsidl.scl;../../../runtime/sidlx/libsidlx.scl;../../output/libC/libOutput.scl" \
      ./runChapel2$language 
EOF
	  ;;
      Python)
	  cat >runChapel2Python.sh <<EOF
env LD_LIBRARY_PATH="@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}" \
    PYTHONPATH="../libPython:`@PYTHON@ -c "from distutils.sysconfig import get_python_lib; print get_python_lib(prefix='@prefix@',plat_specific=1) + ':' + get_python_lib(prefix='@prefix@')"`:$PYTHONPATH" \
    SIDL_DLL_PATH="../libPython/libimpl.scl;../../output/libC/libOutput.scl;@BABEL_PREFIX@/lib/libsidlx.scl" \
    ./runChapel2$language
EOF
	  ;;
      *)
	  cat >runChapel2$language.sh <<EOF
env LD_LIBRARY_PATH="@BABEL_PREFIX@/lib:${LD_LIBRARY_PATH}" \
    SIDL_DLL_PATH="$libdir/libimpl.scl;../../output/libC/libOutput.scl;@BABEL_PREFIX@/lib/libsidlx.scl" \
    ./runChapel2$language
EOF
	  ;;
  esac
  chmod u+x runChapel2$language.sh
done


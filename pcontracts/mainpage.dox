/**
 @file

\mainpage PAUL Contracts

\section IntroductionTag Introduction

This package contains .. \b ToDo [FILL THIS IN]

Simple makefiles are currently used to build the tools; run examples; and
run regression tests.  Specific environment requirements are associated 
with the build process.  Basic instructions for available makefile targets 
are given below and (will be) included in the README file.

\b WARNING:  This is a \b work \b in \b progess so, at present, only the 
contents of the examples and docs directories build.


\section EnvironmentTag Environment

Ensure you have ROSE and associated dependencies installed and running
before attempting to build this package.  The examples and documentation 
have been successfully built in the following environment(s):

- \b Ubuntu 11.04:\n  \b GNU \b Make 3.81, \b GraphViz 2.26.3, \b Doxygen 1.7.3,
\b java 1.6, \b gmp 5.0.2, \b mpfr 3.1.0, \b mpc 0.9, \b gcc 4.4.6, 
\b boost 1.45.0, and \b rose 0.9.5a.

Note that \b GraphViz and \b Doxygen are only needed to generate the
documentation.


Makefiles assume the following environment variables are properly defined:

- \b ROSE_HOME  # ROSE installation root with lib and include subdirectories
- \b BOOST_HOME  # BOOST installation root with lib and include subdirectories


\section BuildTag Building Software

Software can be built through a simple makefile invocation at the command
line:

- \b make


\section RunTag Running Examples and Tests

Basic tests can be executed for comparing the results of the two knapsack
implementations as well as the regression test suite for the runtime library.  
The comparison is performed automatically when entering the following on the 
command line:

- \b make \b check

Results of running the examples can be found in files with \b .out extensions
and the comparisons in files with \b .diffs extensions.  These files, which
are located in the \b examples subdirectory when created, will automatically 
be removed when the directory is cleaned.

Results of running regression tests are summarized in a file with \b .out
extension while stats and trace files have \b .csv extensions.


\section CleanTag Cleaning Directories

Object and output files are automatically removed with:

- \b make \b clean

Documentation, object, output, and executable files are removed with:

- \b make \b clean-all


\section DocsTag Generating Documentation

With \b Doxygen and \b GraphViz's \b dot installed and in the path, 
documentation can be (re)generated in a \b docs subdirectory by running 
the following at the command line:

- \b make \b docs

Now you can navigate to and open the index.html file from a web
browser to see information about the classes and files in this package.

*/

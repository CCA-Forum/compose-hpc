PROTOTYPE

HIGH:
- Finish paper.
- Address test case where Rose with Edg-4 properly handling invariant on 
  implicit return but older Rose doesn't (SimpleClass.cpp).


MODERATE:
- Address remaining STATS instrumentation issues.
  -- Where should pre-routine STATS be instrumented?
     (Now blanket adding before finalize regardless of annotation location.)
  -- Checks currently terminate on violation (PCE_CHECK_EXPR_TERM).  How
     should the possibility of supporting PCE_CHECK_EXPR be specified instead?
     (Will need to test the feature.)

- TBD: How should finer grained timing data be acquired for partial
  enforcement strategies?
  -- Support what could be considered default timing data added to each
     executable annotation?
  -- CONTRACT TIMING ?


Refinements:
- TRACE annotation support (optional?)
  -- Add support for an in-lined TRACE comment to output enforcement trace
     information (provided a trace file was specified in the configuration).
     (This will require restoration of timing instrumentation.)
  -- Complete testing and debugging

- Support advanced (non-standard C) contract expressions
     (ie, those containing non-C operators supported in SIDL built-ins)
  -- This requires integration with Adrian's work since the expressions 
     need to be properly parsed.


Lower Priority Refinements:
- Support multiple enforcers (and configurations).
- Support routine-specific time estimates (as had been done in Babel).
- More test cases.


   

LIBPAUL
- Develop ties and links to contract instrumentation work
  -- Investigate Adrian's work on this
- Add related unit test(s)


Last Updated:  2014 October 09

PROTOTYPE

HIGH:
- Finish paper.


MODERATE:
- Spend more time investigating whether -rose:collectAllCommentsAndDirectives,
  which is supposed to preserve comments and directives from the header in the
  AST, can be used to move invariants, preconditions, and postconditions to
  declarations in the header file (where they belong).

- Address remaining STATS instrumentation issues.
  -- Where should pre-routine STATS be instrumented?
     (Now blanket adding before finalize regardless of annotation location.)
  -- Checks currently terminate on violation (PCE_CHECK_EXPR_TERM).  How
     should the possibility of supporting PCE_CHECK_EXPR be specified instead?
     (Will need to test the feature.)

- TBD: How should finer grained timing data be acquired for partial
  enforcement strategies?
  -- Support what could be considered default timing data added to each
     executable annotation?
  -- CONTRACT TIMING ?


Refinements:
- TRACE annotation support (optional?)
  -- Add support for an in-lined TRACE comment to output enforcement trace
     information (provided a trace file was specified in the configuration).
     (This will require restoration of timing instrumentation.)
  -- Complete testing and debugging

- Support advanced (non-standard C) contract expressions
     (ie, those containing non-C operators supported in SIDL built-ins)
  -- This requires integration with Adrian's work since the expressions 
     need to be properly parsed.

- Support type-specific versions of pce_range and pce_in_range helpers
   (and add associated unit tests)


Lower Priority Refinements:
- Support multiple enforcers (and configurations).
- Support routine-specific time estimates (as had been done in Babel).
- Add regular expression support for test fiducial outputs so can eliminate
  outdated test fiducials whose only differences are in line numbers output
  with error messages.
- Add more test cases.


   

LIBPAUL
- Develop ties and links to contract instrumentation work
  -- Investigate Adrian's work on this
- Add related unit test(s)


Last Updated:  2015 July 29

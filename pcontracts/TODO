*** Preliminaries:

EXAMPLES
- Create an instrumenter example using actual contract clause annotations.
  -- Initial version expected to only translate basic assertion expressions
     (ie, those containing C operators).

- Stand-alone enforcement library 
  TBD:  Should Babel/SIDL tracing equivalent be supported?


LIBPAUL
- Continue preliminary identification of relevant libpaul features
  -- Resume work on:
     o CommentVisitor
       A preferred version would be for CommentVisitor (or PaulConfReader?) 
       to support the addition of <parser-name, comment handler function>
       pairings.  Then handle_comment() could retrieve and call the comment
       handler function.
     o PaulContractsDecorator

- Extend libpaul/PaulDecorate (or revision) with support for new parsers
  and new annotation node support
  -- Depends on tag-parser generalizations and support for multiple 
     annotation attributes per node as proposed at the coding camp



*** Refinement:
- Support advanced (non-standard C) contract expressions
     (ie, those containing non-C operators supported by Babel)



Last Updated:  2012 August 17

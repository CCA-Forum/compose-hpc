'''
Created on Oct 9, 2011

@author: Ajay Panyala
'''

#!/usr/bin/env python

import os
import sys

if len(sys.argv) <= 1: 
   print "\nUsage: ./Tascel.py path-to-input-file autoAnnot"
   sys.exit()

filePath = sys.argv[1]

autoAnnotOption = ""
version = 0

try:
    version = sys.argv[2]
    autoAnnotOption = sys.argv[3]
except:
    pass

sindex = 0
try:
    sindex = filePath.rindex("/")+1
except ValueError:
    pass
    
print 'version = ' + str(version)
fileName = filePath[sindex:]
filePath = filePath[0:sindex]

if filePath: os.chdir(filePath)

' Read the linker file. '
paulHome = os.environ.get("PAUL_HOME")
paul = paulHome+"/paul"
linkerPath = paulHome+"/tascel/linker"
simpleTrans = paulHome+"/SimpleTranslator"
autoAnnot = paulHome+"/tascel/addAnnot.cocci"

linkFile = open(linkerPath, mode='r')

link = ""

for line in linkFile:
    if line.startswith('%'): link += line[line.index("%")+1:].strip()
        
linkFile.close()

linker=link
    
fName = fileName[0:fileName.rindex(".")]
extension = fileName[fileName.rindex(".")+1:]

cocciOptions = ""
if(extension != "c"): cocciOptions = "-c++"

if(not (autoAnnotOption=="PAUL")):
    os.system("%s -rose:skipfinalCompileStep %s %s" %(simpleTrans,fileName,linker))

    if(len(autoAnnotOption) != 0):
        os.system("spatch %s -sp_file %s rose_%s -o rose_trans_%s > /dev/null" %(cocciOptions,autoAnnot,fileName,fileName))
        os.system("sed -i 's/%s/%s/g' rose_trans_%s" %("*\/;","*\/",fileName))
    else:
        os.system("cp rose_%s rose_trans_%s" %(fileName,fileName))

    if(autoAnnotOption=="autoAnnotNstop"): quit()

print "Running PAUL"
os.system("%s rose_trans_%s.%s %s" %(paul,fName,extension,linker))

tascelCocci = "rose_trans_%s_tascel.cocci" %(fName)



if(os.path.exists(tascelCocci)):
    print "Transforming rose_trans_%s.%s" %(fName,extension)

    os.system("spatch %s -sp_file  %s rose_trans_%s.%s\
              -o rose_trans_%s_tascel.%s > /dev/null" %(cocciOptions,tascelCocci,fName,extension,fName,extension))

    if str(version)=="1":
        csrc="rose_trans_%s_tascel.c" %(fName)
        cdest="rose_trans_%s_tascel.C" %(fName)
        os.system("cp %s %s" %(csrc,cdest))
        oldLine = "\/\/TASCELSEDREP " 
        replaceLine = ""
        
        os.system("sed -i 's/%s/%s/g' %s" %(oldLine.strip(),replaceLine.strip(),cdest)) 
        
        oldLine = "TASCELSEDREP +" 
        replaceLine = ""
        
        os.system("sed -i 's/%s/%s/g' %s" %(oldLine.strip(),replaceLine.strip(),cdest)) 
        
        
    if(len(link) != 0):
        print "\nCompiling rose_trans_%s_tascel.cu ..." %(fName)
        compileTascel = "gcc rose_trans_%s_tascel.cu -o rose_trans_%s_tascel %s" %(fName,fName,linker)
        print compileTascel
        #os.system(compileTascel)

    #print "Building both versions of rose_trans_%s" %(fName)
    #os.system(gcc ..)


else:
    print "File "+tascelCocci+" not generated by PAUL.\n \
           TASCEL Transformation cannot be applied to " + fileName
    
    
